// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BETCREATED extends ethereum.Event {
  get params(): BETCREATED__Params {
    return new BETCREATED__Params(this);
  }
}

export class BETCREATED__Params {
  _event: BETCREATED;

  constructor(event: BETCREATED) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get privateOrPublic_(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get name_(): string {
    return this._event.parameters[3].value.toString();
  }

  get choiceOne_(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get choiceTwo_(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get betMaster_(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get opponentAddress_(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get amount_(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class BETCREATED1 extends ethereum.Event {
  get params(): BETCREATED1__Params {
    return new BETCREATED1__Params(this);
  }
}

export class BETCREATED1__Params {
  _event: BETCREATED1;

  constructor(event: BETCREATED1) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get privateOrPublic_(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get name_(): string {
    return this._event.parameters[3].value.toString();
  }

  get choiceOne_(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get choiceTwo_(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get betMaster_(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get numOfChoices_(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class BETCREATED2 extends ethereum.Event {
  get params(): BETCREATED2__Params {
    return new BETCREATED2__Params(this);
  }
}

export class BETCREATED2__Params {
  _event: BETCREATED2;

  constructor(event: BETCREATED2) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get privateOrPublic(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get name_(): string {
    return this._event.parameters[3].value.toString();
  }

  get choiceOne_(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get choiceTwo_(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get choiceThree_(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get betMaster_(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get numOfChoices_(): i32 {
    return this._event.parameters[8].value.toI32();
  }
}

export class BETCREATED3 extends ethereum.Event {
  get params(): BETCREATED3__Params {
    return new BETCREATED3__Params(this);
  }
}

export class BETCREATED3__Params {
  _event: BETCREATED3;

  constructor(event: BETCREATED3) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get privateOrPublic(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get name_(): string {
    return this._event.parameters[3].value.toString();
  }

  get choiceOne_(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get choiceTwo_(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get choiceThree_(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get choiceFour_(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get betMaster_(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get numOfChoices_(): i32 {
    return this._event.parameters[9].value.toI32();
  }
}

export class BETEXECUTED extends ethereum.Event {
  get params(): BETEXECUTED__Params {
    return new BETEXECUTED__Params(this);
  }
}

export class BETEXECUTED__Params {
  _event: BETEXECUTED;

  constructor(event: BETEXECUTED) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get correctChoice_(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get executed_(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BETMASTERPAYOUTCLAIMED extends ethereum.Event {
  get params(): BETMASTERPAYOUTCLAIMED__Params {
    return new BETMASTERPAYOUTCLAIMED__Params(this);
  }
}

export class BETMASTERPAYOUTCLAIMED__Params {
  _event: BETMASTERPAYOUTCLAIMED;

  constructor(event: BETMASTERPAYOUTCLAIMED) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get profit_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get betMaster_(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class BETPLACED extends ethereum.Event {
  get params(): BETPLACED__Params {
    return new BETPLACED__Params(this);
  }
}

export class BETPLACED__Params {
  _event: BETPLACED;

  constructor(event: BETPLACED) {
    this._event = event;
  }

  get pundit_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get betId_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get choice_(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get amount_(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BETPLACED1 extends ethereum.Event {
  get params(): BETPLACED1__Params {
    return new BETPLACED1__Params(this);
  }
}

export class BETPLACED1__Params {
  _event: BETPLACED1;

  constructor(event: BETPLACED1) {
    this._event = event;
  }

  get pundit_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get betId_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PAYOUTCLAIMED extends ethereum.Event {
  get params(): PAYOUTCLAIMED__Params {
    return new PAYOUTCLAIMED__Params(this);
  }
}

export class PAYOUTCLAIMED__Params {
  _event: PAYOUTCLAIMED;

  constructor(event: PAYOUTCLAIMED) {
    this._event = event;
  }

  get betId_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get pundit_(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class BoardMan__betEventsResultInitStruct extends ethereum.Tuple {
  get betId(): BigInt {
    return this[0].toBigInt();
  }

  get deadline(): BigInt {
    return this[1].toBigInt();
  }

  get creationFee(): BigInt {
    return this[2].toBigInt();
  }

  get name(): string {
    return this[3].toString();
  }

  get betMaster(): Address {
    return this[4].toAddress();
  }

  get numOfChoices(): i32 {
    return this[5].toI32();
  }
}

export class BoardMan__betEventsResultChoiceOneStruct extends ethereum.Tuple {
  get choiceOne_(): Bytes {
    return this[0].toBytes();
  }

  get choiceOneNoB(): BigInt {
    return this[1].toBigInt();
  }

  get choiceOneAmount(): BigInt {
    return this[2].toBigInt();
  }

  get oddOne(): BigInt {
    return this[3].toBigInt();
  }

  get finalOddOne(): BigInt {
    return this[4].toBigInt();
  }
}

export class BoardMan__betEventsResultChoiceTwoStruct extends ethereum.Tuple {
  get choiceTwo_(): Bytes {
    return this[0].toBytes();
  }

  get choiceTwoNoB(): BigInt {
    return this[1].toBigInt();
  }

  get choiceTwoAmount(): BigInt {
    return this[2].toBigInt();
  }

  get oddTwo(): BigInt {
    return this[3].toBigInt();
  }

  get finalOddTwo(): BigInt {
    return this[4].toBigInt();
  }
}

export class BoardMan__betEventsResultChoiceThreeStruct extends ethereum.Tuple {
  get choiceThree_(): Bytes {
    return this[0].toBytes();
  }

  get choiceThreeNoB(): BigInt {
    return this[1].toBigInt();
  }

  get choiceThreeAmount(): BigInt {
    return this[2].toBigInt();
  }

  get oddThree(): BigInt {
    return this[3].toBigInt();
  }

  get finalOddThree(): BigInt {
    return this[4].toBigInt();
  }
}

export class BoardMan__betEventsResultChoiceFourStruct extends ethereum.Tuple {
  get choiceFour_(): Bytes {
    return this[0].toBytes();
  }

  get choiceFourNoB(): BigInt {
    return this[1].toBigInt();
  }

  get choiceFourAmount(): BigInt {
    return this[2].toBigInt();
  }

  get oddFour(): BigInt {
    return this[3].toBigInt();
  }

  get finalOddFour(): BigInt {
    return this[4].toBigInt();
  }
}

export class BoardMan__betEventsResultTotalsStruct extends ethereum.Tuple {
  get totalAmountCorrectChoice(): BigInt {
    return this[0].toBigInt();
  }

  get totalNumberOfBetsCorrectChoice(): BigInt {
    return this[1].toBigInt();
  }

  get totalBets(): BigInt {
    return this[2].toBigInt();
  }

  get totalAmount(): BigInt {
    return this[3].toBigInt();
  }
}

export class BoardMan__betEventsResultPrivorpubStruct extends ethereum.Tuple {
  get privateOrPublic(): i32 {
    return this[0].toI32();
  }

  get active(): boolean {
    return this[1].toBoolean();
  }

  get challengeAccepted(): boolean {
    return this[2].toBoolean();
  }

  get winner(): Address {
    return this[3].toAddress();
  }

  get privateBetOpponent(): Address {
    return this[4].toAddress();
  }

  get PP_yourChoice(): Bytes {
    return this[5].toBytes();
  }

  get PP_opponentsChoice(): Bytes {
    return this[6].toBytes();
  }

  get PP_correctChoice(): Bytes {
    return this[7].toBytes();
  }

  get PP_amount(): BigInt {
    return this[8].toBigInt();
  }
}

export class BoardMan__betEventsResultFinalizeStruct extends ethereum.Tuple {
  get correctChoice(): i32 {
    return this[0].toI32();
  }

  get finalOddsUpdated(): boolean {
    return this[1].toBoolean();
  }

  get executed(): boolean {
    return this[2].toBoolean();
  }

  get datetimeExecuted(): BigInt {
    return this[3].toBigInt();
  }
}

export class BoardMan__betEventsResult {
  value0: BoardMan__betEventsResultInitStruct;
  value1: BoardMan__betEventsResultChoiceOneStruct;
  value2: BoardMan__betEventsResultChoiceTwoStruct;
  value3: BoardMan__betEventsResultChoiceThreeStruct;
  value4: BoardMan__betEventsResultChoiceFourStruct;
  value5: BoardMan__betEventsResultTotalsStruct;
  value6: BoardMan__betEventsResultPrivorpubStruct;
  value7: BoardMan__betEventsResultFinalizeStruct;

  constructor(
    value0: BoardMan__betEventsResultInitStruct,
    value1: BoardMan__betEventsResultChoiceOneStruct,
    value2: BoardMan__betEventsResultChoiceTwoStruct,
    value3: BoardMan__betEventsResultChoiceThreeStruct,
    value4: BoardMan__betEventsResultChoiceFourStruct,
    value5: BoardMan__betEventsResultTotalsStruct,
    value6: BoardMan__betEventsResultPrivorpubStruct,
    value7: BoardMan__betEventsResultFinalizeStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    map.set("value3", ethereum.Value.fromTuple(this.value3));
    map.set("value4", ethereum.Value.fromTuple(this.value4));
    map.set("value5", ethereum.Value.fromTuple(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    return map;
  }
}

export class BoardMan__finalOddsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class BoardMan__getStageOneOddsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class BoardMan__viewFinalOddsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class BoardMan extends ethereum.SmartContract {
  static bind(address: Address): BoardMan {
    return new BoardMan("BoardMan", address);
  }

  IntegrityScore(param0: Address): i32 {
    let result = super.call(
      "IntegrityScore",
      "IntegrityScore(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toI32();
  }

  try_IntegrityScore(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "IntegrityScore",
      "IntegrityScore(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  betEvents(param0: BigInt): BoardMan__betEventsResult {
    let result = super.call(
      "betEvents",
      "betEvents(uint256):((uint256,uint256,uint256,string,address,uint8),(bytes32,uint32,uint256,uint256,uint256),(bytes32,uint32,uint256,uint256,uint256),(bytes32,uint32,uint256,uint256,uint256),(bytes32,uint32,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),(uint8,bool,bool,address,address,bytes32,bytes32,bytes32,uint256),(uint8,bool,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return changetype<BoardMan__betEventsResult>(
      new BoardMan__betEventsResult(
        changetype<BoardMan__betEventsResultInitStruct>(result[0].toTuple()),
        changetype<BoardMan__betEventsResultChoiceOneStruct>(
          result[1].toTuple()
        ),
        changetype<BoardMan__betEventsResultChoiceTwoStruct>(
          result[2].toTuple()
        ),
        changetype<BoardMan__betEventsResultChoiceThreeStruct>(
          result[3].toTuple()
        ),
        changetype<BoardMan__betEventsResultChoiceFourStruct>(
          result[4].toTuple()
        ),
        changetype<BoardMan__betEventsResultTotalsStruct>(result[5].toTuple()),
        changetype<BoardMan__betEventsResultPrivorpubStruct>(
          result[6].toTuple()
        ),
        changetype<BoardMan__betEventsResultFinalizeStruct>(result[7].toTuple())
      )
    );
  }

  try_betEvents(
    param0: BigInt
  ): ethereum.CallResult<BoardMan__betEventsResult> {
    let result = super.tryCall(
      "betEvents",
      "betEvents(uint256):((uint256,uint256,uint256,string,address,uint8),(bytes32,uint32,uint256,uint256,uint256),(bytes32,uint32,uint256,uint256,uint256),(bytes32,uint32,uint256,uint256,uint256),(bytes32,uint32,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),(uint8,bool,bool,address,address,bytes32,bytes32,bytes32,uint256),(uint8,bool,bool,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<BoardMan__betEventsResult>(
        new BoardMan__betEventsResult(
          changetype<BoardMan__betEventsResultInitStruct>(value[0].toTuple()),
          changetype<BoardMan__betEventsResultChoiceOneStruct>(
            value[1].toTuple()
          ),
          changetype<BoardMan__betEventsResultChoiceTwoStruct>(
            value[2].toTuple()
          ),
          changetype<BoardMan__betEventsResultChoiceThreeStruct>(
            value[3].toTuple()
          ),
          changetype<BoardMan__betEventsResultChoiceFourStruct>(
            value[4].toTuple()
          ),
          changetype<BoardMan__betEventsResultTotalsStruct>(value[5].toTuple()),
          changetype<BoardMan__betEventsResultPrivorpubStruct>(
            value[6].toTuple()
          ),
          changetype<BoardMan__betEventsResultFinalizeStruct>(
            value[7].toTuple()
          )
        )
      )
    );
  }

  checkIfBetMaster(_betId: BigInt): boolean {
    let result = super.call(
      "checkIfBetMaster",
      "checkIfBetMaster(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );

    return result[0].toBoolean();
  }

  try_checkIfBetMaster(_betId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkIfBetMaster",
      "checkIfBetMaster(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  claimPayout(_betId: BigInt): boolean {
    let result = super.call("claimPayout", "claimPayout(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_betId)
    ]);

    return result[0].toBoolean();
  }

  try_claimPayout(_betId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("claimPayout", "claimPayout(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_betId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  executeBetEvent(_betId: BigInt, _correctChoice: i32): boolean {
    let result = super.call(
      "executeBetEvent",
      "executeBetEvent(uint256,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_betId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_correctChoice))
      ]
    );

    return result[0].toBoolean();
  }

  try_executeBetEvent(
    _betId: BigInt,
    _correctChoice: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "executeBetEvent",
      "executeBetEvent(uint256,uint8):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_betId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_correctChoice))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  finalOdds(
    _betId: BigInt,
    odds1: BigInt,
    odds2: BigInt,
    odds3: BigInt,
    odds4: BigInt
  ): BoardMan__finalOddsResult {
    let result = super.call(
      "finalOdds",
      "finalOdds(uint256,uint256,uint256,uint256,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_betId),
        ethereum.Value.fromUnsignedBigInt(odds1),
        ethereum.Value.fromUnsignedBigInt(odds2),
        ethereum.Value.fromUnsignedBigInt(odds3),
        ethereum.Value.fromUnsignedBigInt(odds4)
      ]
    );

    return new BoardMan__finalOddsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_finalOdds(
    _betId: BigInt,
    odds1: BigInt,
    odds2: BigInt,
    odds3: BigInt,
    odds4: BigInt
  ): ethereum.CallResult<BoardMan__finalOddsResult> {
    let result = super.tryCall(
      "finalOdds",
      "finalOdds(uint256,uint256,uint256,uint256,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_betId),
        ethereum.Value.fromUnsignedBigInt(odds1),
        ethereum.Value.fromUnsignedBigInt(odds2),
        ethereum.Value.fromUnsignedBigInt(odds3),
        ethereum.Value.fromUnsignedBigInt(odds4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BoardMan__finalOddsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getStageOneOdds(_betId: BigInt): BoardMan__getStageOneOddsResult {
    let result = super.call(
      "getStageOneOdds",
      "getStageOneOdds(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );

    return new BoardMan__getStageOneOddsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getStageOneOdds(
    _betId: BigInt
  ): ethereum.CallResult<BoardMan__getStageOneOddsResult> {
    let result = super.tryCall(
      "getStageOneOdds",
      "getStageOneOdds(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BoardMan__getStageOneOddsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  numBetEvents(): BigInt {
    let result = super.call("numBetEvents", "numBetEvents():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numBetEvents(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numBetEvents", "numBetEvents():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  viewBetEventFee(): BigInt {
    let result = super.call(
      "viewBetEventFee",
      "viewBetEventFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_viewBetEventFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "viewBetEventFee",
      "viewBetEventFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewBetMaster(_betId: BigInt): Address {
    let result = super.call(
      "viewBetMaster",
      "viewBetMaster(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );

    return result[0].toAddress();
  }

  try_viewBetMaster(_betId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "viewBetMaster",
      "viewBetMaster(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  viewCorrectChoice(_betId: BigInt): i32 {
    let result = super.call(
      "viewCorrectChoice",
      "viewCorrectChoice(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );

    return result[0].toI32();
  }

  try_viewCorrectChoice(_betId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "viewCorrectChoice",
      "viewCorrectChoice(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  viewFinalOdds(_betId: BigInt): BoardMan__viewFinalOddsResult {
    let result = super.call(
      "viewFinalOdds",
      "viewFinalOdds(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );

    return new BoardMan__viewFinalOddsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_viewFinalOdds(
    _betId: BigInt
  ): ethereum.CallResult<BoardMan__viewFinalOddsResult> {
    let result = super.tryCall(
      "viewFinalOdds",
      "viewFinalOdds(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BoardMan__viewFinalOddsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  viewMinBetFee(): BigInt {
    let result = super.call("viewMinBetFee", "viewMinBetFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_viewMinBetFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "viewMinBetFee",
      "viewMinBetFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewPPCorrectChoice(_betId: BigInt): Bytes {
    let result = super.call(
      "viewPPCorrectChoice",
      "viewPPCorrectChoice(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );

    return result[0].toBytes();
  }

  try_viewPPCorrectChoice(_betId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "viewPPCorrectChoice",
      "viewPPCorrectChoice(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_betId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _createBetEventFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minBetFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class PPaddCorrectChoiceCall extends ethereum.Call {
  get inputs(): PPaddCorrectChoiceCall__Inputs {
    return new PPaddCorrectChoiceCall__Inputs(this);
  }

  get outputs(): PPaddCorrectChoiceCall__Outputs {
    return new PPaddCorrectChoiceCall__Outputs(this);
  }
}

export class PPaddCorrectChoiceCall__Inputs {
  _call: PPaddCorrectChoiceCall;

  constructor(call: PPaddCorrectChoiceCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _correctChoice(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class PPaddCorrectChoiceCall__Outputs {
  _call: PPaddCorrectChoiceCall;

  constructor(call: PPaddCorrectChoiceCall) {
    this._call = call;
  }
}

export class AcceptChallengeCall extends ethereum.Call {
  get inputs(): AcceptChallengeCall__Inputs {
    return new AcceptChallengeCall__Inputs(this);
  }

  get outputs(): AcceptChallengeCall__Outputs {
    return new AcceptChallengeCall__Outputs(this);
  }
}

export class AcceptChallengeCall__Inputs {
  _call: AcceptChallengeCall;

  constructor(call: AcceptChallengeCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptChallengeCall__Outputs {
  _call: AcceptChallengeCall;

  constructor(call: AcceptChallengeCall) {
    this._call = call;
  }
}

export class ClaimBetMasterCall extends ethereum.Call {
  get inputs(): ClaimBetMasterCall__Inputs {
    return new ClaimBetMasterCall__Inputs(this);
  }

  get outputs(): ClaimBetMasterCall__Outputs {
    return new ClaimBetMasterCall__Outputs(this);
  }
}

export class ClaimBetMasterCall__Inputs {
  _call: ClaimBetMasterCall;

  constructor(call: ClaimBetMasterCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimBetMasterCall__Outputs {
  _call: ClaimBetMasterCall;

  constructor(call: ClaimBetMasterCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ClaimPayoutCall extends ethereum.Call {
  get inputs(): ClaimPayoutCall__Inputs {
    return new ClaimPayoutCall__Inputs(this);
  }

  get outputs(): ClaimPayoutCall__Outputs {
    return new ClaimPayoutCall__Outputs(this);
  }
}

export class ClaimPayoutCall__Inputs {
  _call: ClaimPayoutCall;

  constructor(call: ClaimPayoutCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimPayoutCall__Outputs {
  _call: ClaimPayoutCall;

  constructor(call: ClaimPayoutCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateBetEventCall extends ethereum.Call {
  get inputs(): CreateBetEventCall__Inputs {
    return new CreateBetEventCall__Inputs(this);
  }

  get outputs(): CreateBetEventCall__Outputs {
    return new CreateBetEventCall__Outputs(this);
  }
}

export class CreateBetEventCall__Inputs {
  _call: CreateBetEventCall;

  constructor(call: CreateBetEventCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _choiceOne(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _choiceTwo(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _choiceThree(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CreateBetEventCall__Outputs {
  _call: CreateBetEventCall;

  constructor(call: CreateBetEventCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateBetEvent1Call extends ethereum.Call {
  get inputs(): CreateBetEvent1Call__Inputs {
    return new CreateBetEvent1Call__Inputs(this);
  }

  get outputs(): CreateBetEvent1Call__Outputs {
    return new CreateBetEvent1Call__Outputs(this);
  }
}

export class CreateBetEvent1Call__Inputs {
  _call: CreateBetEvent1Call;

  constructor(call: CreateBetEvent1Call) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _choiceOne(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _choiceTwo(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _choiceThree(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _choiceFour(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class CreateBetEvent1Call__Outputs {
  _call: CreateBetEvent1Call;

  constructor(call: CreateBetEvent1Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateBetEvent2Call extends ethereum.Call {
  get inputs(): CreateBetEvent2Call__Inputs {
    return new CreateBetEvent2Call__Inputs(this);
  }

  get outputs(): CreateBetEvent2Call__Outputs {
    return new CreateBetEvent2Call__Outputs(this);
  }
}

export class CreateBetEvent2Call__Inputs {
  _call: CreateBetEvent2Call;

  constructor(call: CreateBetEvent2Call) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _choiceOne(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _choiceTwo(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CreateBetEvent2Call__Outputs {
  _call: CreateBetEvent2Call;

  constructor(call: CreateBetEvent2Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreatePrivateBetEventCall extends ethereum.Call {
  get inputs(): CreatePrivateBetEventCall__Inputs {
    return new CreatePrivateBetEventCall__Inputs(this);
  }

  get outputs(): CreatePrivateBetEventCall__Outputs {
    return new CreatePrivateBetEventCall__Outputs(this);
  }
}

export class CreatePrivateBetEventCall__Inputs {
  _call: CreatePrivateBetEventCall;

  constructor(call: CreatePrivateBetEventCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _opponent(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _yourChoice(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _otherChoice(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreatePrivateBetEventCall__Outputs {
  _call: CreatePrivateBetEventCall;

  constructor(call: CreatePrivateBetEventCall) {
    this._call = call;
  }
}

export class ExecuteBetEventCall extends ethereum.Call {
  get inputs(): ExecuteBetEventCall__Inputs {
    return new ExecuteBetEventCall__Inputs(this);
  }

  get outputs(): ExecuteBetEventCall__Outputs {
    return new ExecuteBetEventCall__Outputs(this);
  }
}

export class ExecuteBetEventCall__Inputs {
  _call: ExecuteBetEventCall;

  constructor(call: ExecuteBetEventCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _correctChoice(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class ExecuteBetEventCall__Outputs {
  _call: ExecuteBetEventCall;

  constructor(call: ExecuteBetEventCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FinalOddsCall extends ethereum.Call {
  get inputs(): FinalOddsCall__Inputs {
    return new FinalOddsCall__Inputs(this);
  }

  get outputs(): FinalOddsCall__Outputs {
    return new FinalOddsCall__Outputs(this);
  }
}

export class FinalOddsCall__Inputs {
  _call: FinalOddsCall;

  constructor(call: FinalOddsCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get odds1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get odds2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get odds3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get odds4(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class FinalOddsCall__Outputs {
  _call: FinalOddsCall;

  constructor(call: FinalOddsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get value2(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class IntegrityCall extends ethereum.Call {
  get inputs(): IntegrityCall__Inputs {
    return new IntegrityCall__Inputs(this);
  }

  get outputs(): IntegrityCall__Outputs {
    return new IntegrityCall__Outputs(this);
  }
}

export class IntegrityCall__Inputs {
  _call: IntegrityCall;

  constructor(call: IntegrityCall) {
    this._call = call;
  }

  get _defaulter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class IntegrityCall__Outputs {
  _call: IntegrityCall;

  constructor(call: IntegrityCall) {
    this._call = call;
  }
}

export class PlaceBetCall extends ethereum.Call {
  get inputs(): PlaceBetCall__Inputs {
    return new PlaceBetCall__Inputs(this);
  }

  get outputs(): PlaceBetCall__Outputs {
    return new PlaceBetCall__Outputs(this);
  }
}

export class PlaceBetCall__Inputs {
  _call: PlaceBetCall;

  constructor(call: PlaceBetCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get choice_(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class PlaceBetCall__Outputs {
  _call: PlaceBetCall;

  constructor(call: PlaceBetCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RecallChallengeCall extends ethereum.Call {
  get inputs(): RecallChallengeCall__Inputs {
    return new RecallChallengeCall__Inputs(this);
  }

  get outputs(): RecallChallengeCall__Outputs {
    return new RecallChallengeCall__Outputs(this);
  }
}

export class RecallChallengeCall__Inputs {
  _call: RecallChallengeCall;

  constructor(call: RecallChallengeCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RecallChallengeCall__Outputs {
  _call: RecallChallengeCall;

  constructor(call: RecallChallengeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WinnerTakesAllCall extends ethereum.Call {
  get inputs(): WinnerTakesAllCall__Inputs {
    return new WinnerTakesAllCall__Inputs(this);
  }

  get outputs(): WinnerTakesAllCall__Outputs {
    return new WinnerTakesAllCall__Outputs(this);
  }
}

export class WinnerTakesAllCall__Inputs {
  _call: WinnerTakesAllCall;

  constructor(call: WinnerTakesAllCall) {
    this._call = call;
  }

  get _betId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WinnerTakesAllCall__Outputs {
  _call: WinnerTakesAllCall;

  constructor(call: WinnerTakesAllCall) {
    this._call = call;
  }
}

export class WithdrawEtherCall extends ethereum.Call {
  get inputs(): WithdrawEtherCall__Inputs {
    return new WithdrawEtherCall__Inputs(this);
  }

  get outputs(): WithdrawEtherCall__Outputs {
    return new WithdrawEtherCall__Outputs(this);
  }
}

export class WithdrawEtherCall__Inputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}

export class WithdrawEtherCall__Outputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}
